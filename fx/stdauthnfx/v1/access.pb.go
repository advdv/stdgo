// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: fx/stdauthnfx/v1/access.proto

package stdauthnfxv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccessIdentity struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Subject     *string                `protobuf:"bytes,1,opt,name=subject"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AccessIdentity) Reset() {
	*x = AccessIdentity{}
	mi := &file_fx_stdauthnfx_v1_access_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessIdentity) ProtoMessage() {}

func (x *AccessIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_fx_stdauthnfx_v1_access_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AccessIdentity) GetSubject() string {
	if x != nil {
		if x.xxx_hidden_Subject != nil {
			return *x.xxx_hidden_Subject
		}
		return ""
	}
	return ""
}

func (x *AccessIdentity) SetSubject(v string) {
	x.xxx_hidden_Subject = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *AccessIdentity) HasSubject() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AccessIdentity) ClearSubject() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Subject = nil
}

type AccessIdentity_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Subject *string
}

func (b0 AccessIdentity_builder) Build() *AccessIdentity {
	m0 := &AccessIdentity{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Subject != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Subject = b.Subject
	}
	return m0
}

type Access struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Info isAccess_Info          `protobuf_oneof:"info"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Access) Reset() {
	*x = Access{}
	mi := &file_fx_stdauthnfx_v1_access_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Access) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Access) ProtoMessage() {}

func (x *Access) ProtoReflect() protoreflect.Message {
	mi := &file_fx_stdauthnfx_v1_access_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Access) GetIsAnonymous() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_Info.(*access_IsAnonymous); ok {
			return x.IsAnonymous
		}
	}
	return false
}

func (x *Access) GetIsSystem() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_Info.(*access_IsSystem); ok {
			return x.IsSystem
		}
	}
	return false
}

func (x *Access) GetWebuserIdentity() *AccessIdentity {
	if x != nil {
		if x, ok := x.xxx_hidden_Info.(*access_WebuserIdentity); ok {
			return x.WebuserIdentity
		}
	}
	return nil
}

func (x *Access) SetIsAnonymous(v bool) {
	x.xxx_hidden_Info = &access_IsAnonymous{v}
}

func (x *Access) SetIsSystem(v bool) {
	x.xxx_hidden_Info = &access_IsSystem{v}
}

func (x *Access) SetWebuserIdentity(v *AccessIdentity) {
	if v == nil {
		x.xxx_hidden_Info = nil
		return
	}
	x.xxx_hidden_Info = &access_WebuserIdentity{v}
}

func (x *Access) HasInfo() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Info != nil
}

func (x *Access) HasIsAnonymous() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Info.(*access_IsAnonymous)
	return ok
}

func (x *Access) HasIsSystem() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Info.(*access_IsSystem)
	return ok
}

func (x *Access) HasWebuserIdentity() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Info.(*access_WebuserIdentity)
	return ok
}

func (x *Access) ClearInfo() {
	x.xxx_hidden_Info = nil
}

func (x *Access) ClearIsAnonymous() {
	if _, ok := x.xxx_hidden_Info.(*access_IsAnonymous); ok {
		x.xxx_hidden_Info = nil
	}
}

func (x *Access) ClearIsSystem() {
	if _, ok := x.xxx_hidden_Info.(*access_IsSystem); ok {
		x.xxx_hidden_Info = nil
	}
}

func (x *Access) ClearWebuserIdentity() {
	if _, ok := x.xxx_hidden_Info.(*access_WebuserIdentity); ok {
		x.xxx_hidden_Info = nil
	}
}

const Access_Info_not_set_case case_Access_Info = 0
const Access_IsAnonymous_case case_Access_Info = 2
const Access_IsSystem_case case_Access_Info = 3
const Access_WebuserIdentity_case case_Access_Info = 4

func (x *Access) WhichInfo() case_Access_Info {
	if x == nil {
		return Access_Info_not_set_case
	}
	switch x.xxx_hidden_Info.(type) {
	case *access_IsAnonymous:
		return Access_IsAnonymous_case
	case *access_IsSystem:
		return Access_IsSystem_case
	case *access_WebuserIdentity:
		return Access_WebuserIdentity_case
	default:
		return Access_Info_not_set_case
	}
}

type Access_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Info:
	IsAnonymous     *bool
	IsSystem        *bool
	WebuserIdentity *AccessIdentity
	// -- end of xxx_hidden_Info
}

func (b0 Access_builder) Build() *Access {
	m0 := &Access{}
	b, x := &b0, m0
	_, _ = b, x
	if b.IsAnonymous != nil {
		x.xxx_hidden_Info = &access_IsAnonymous{*b.IsAnonymous}
	}
	if b.IsSystem != nil {
		x.xxx_hidden_Info = &access_IsSystem{*b.IsSystem}
	}
	if b.WebuserIdentity != nil {
		x.xxx_hidden_Info = &access_WebuserIdentity{b.WebuserIdentity}
	}
	return m0
}

type case_Access_Info protoreflect.FieldNumber

func (x case_Access_Info) String() string {
	md := file_fx_stdauthnfx_v1_access_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isAccess_Info interface {
	isAccess_Info()
}

type access_IsAnonymous struct {
	IsAnonymous bool `protobuf:"varint,2,opt,name=is_anonymous,json=isAnonymous,oneof"`
}

type access_IsSystem struct {
	IsSystem bool `protobuf:"varint,3,opt,name=is_system,json=isSystem,oneof"`
}

type access_WebuserIdentity struct {
	WebuserIdentity *AccessIdentity `protobuf:"bytes,4,opt,name=webuser_identity,json=webuserIdentity,oneof"`
}

func (*access_IsAnonymous) isAccess_Info() {}

func (*access_IsSystem) isAccess_Info() {}

func (*access_WebuserIdentity) isAccess_Info() {}

var File_fx_stdauthnfx_v1_access_proto protoreflect.FileDescriptor

const file_fx_stdauthnfx_v1_access_proto_rawDesc = "" +
	"\n" +
	"\x1dfx/stdauthnfx/v1/access.proto\x12\x10fx.stdauthnfx.v1\x1a\x1bbuf/validate/validate.proto\"2\n" +
	"\x0eAccessIdentity\x12 \n" +
	"\asubject\x18\x01 \x01(\tB\x06\xbaH\x03\xc8\x01\x01R\asubject\"\xaa\x01\n" +
	"\x06Access\x12#\n" +
	"\fis_anonymous\x18\x02 \x01(\bH\x00R\visAnonymous\x12\x1d\n" +
	"\tis_system\x18\x03 \x01(\bH\x00R\bisSystem\x12M\n" +
	"\x10webuser_identity\x18\x04 \x01(\v2 .fx.stdauthnfx.v1.AccessIdentityH\x00R\x0fwebuserIdentityB\r\n" +
	"\x04info\x12\x05\xbaH\x02\b\x01B\xbb\x01\n" +
	"\x14com.fx.stdauthnfx.v1B\vAccessProtoP\x01Z4github.com/advdv/stdgo/fx/stdauthnfx/v1;stdauthnfxv1\xa2\x02\x03FSX\xaa\x02\x10Fx.Stdauthnfx.V1\xca\x02\x10Fx\\Stdauthnfx\\V1\xe2\x02\x1cFx\\Stdauthnfx\\V1\\GPBMetadata\xea\x02\x12Fx::Stdauthnfx::V1b\beditionsp\xe8\a"

var file_fx_stdauthnfx_v1_access_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_fx_stdauthnfx_v1_access_proto_goTypes = []any{
	(*AccessIdentity)(nil), // 0: fx.stdauthnfx.v1.AccessIdentity
	(*Access)(nil),         // 1: fx.stdauthnfx.v1.Access
}
var file_fx_stdauthnfx_v1_access_proto_depIdxs = []int32{
	0, // 0: fx.stdauthnfx.v1.Access.webuser_identity:type_name -> fx.stdauthnfx.v1.AccessIdentity
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_fx_stdauthnfx_v1_access_proto_init() }
func file_fx_stdauthnfx_v1_access_proto_init() {
	if File_fx_stdauthnfx_v1_access_proto != nil {
		return
	}
	file_fx_stdauthnfx_v1_access_proto_msgTypes[1].OneofWrappers = []any{
		(*access_IsAnonymous)(nil),
		(*access_IsSystem)(nil),
		(*access_WebuserIdentity)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fx_stdauthnfx_v1_access_proto_rawDesc), len(file_fx_stdauthnfx_v1_access_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fx_stdauthnfx_v1_access_proto_goTypes,
		DependencyIndexes: file_fx_stdauthnfx_v1_access_proto_depIdxs,
		MessageInfos:      file_fx_stdauthnfx_v1_access_proto_msgTypes,
	}.Build()
	File_fx_stdauthnfx_v1_access_proto = out.File
	file_fx_stdauthnfx_v1_access_proto_goTypes = nil
	file_fx_stdauthnfx_v1_access_proto_depIdxs = nil
}
